// Generated by CoffeeScript 1.6.3
(function() {
  var SIGNATURE, UDPShoutor, assert, debuglog, dgram, _;

  dgram = require('dgram');

  assert = require('assert');

  _ = require('underscore');

  debuglog = require("debug")("udpcomm::UDPShoutor");

  SIGNATURE = 6258000;

  UDPShoutor = (function() {
    function UDPShoutor(communicationPort, channelId, host, onMsgCallback) {
      this.communicationPort = communicationPort;
      this.channelId = channelId;
      this.host = host;
      assert(this.communicationPort > 1024, "communicationPort must larger then 1024");
      assert(this.channelId >= 0, "invalid channelId");
      if ((onMsgCallback == null) && _.isFunction(this.host)) {
        onMsgCallback = this.host;
        this.host = "127.0.0.1";
      }
      assert(this.host != null, "missing host");
      assert(_.isFunction(onMsgCallback), "missing callback");
      this.client = dgram.createSocket("udp4");
      this.client.on('message', onMsgCallback);
      this.bufSignature = new Buffer(11);
      this.bufSignature.fill(0);
      this.bufSignature.writeUInt32BE(SIGNATURE, 0);
      this.bufSignature.writeUInt32BE(channelId, 4);
    }

    UDPShoutor.prototype.sendMessage = function(buf) {
      if (!(Buffer.isBuffer(buf) && buf.length > 0)) {
        return;
      }
      buf = Buffer.concat([this.bufSignature, buf]);
      debuglog("[sendMessage] to: " + this.host + ":" + this.communicationPort + ", msg length:" + buf.length);
      return this.client.send(buf, 0, buf.length, this.communicationPort, this.host);
    };

    return UDPShoutor;

  })();

  module.exports = UDPShoutor;

}).call(this);
